version: "3.9"

# Reusable environments
x-environment:
  &default-environment
    - POSTGRES_PASSWORD=qwerty

x-healthcheck:
  &default-healthcheck
    test: [ "CMD-SHELL", "pg_isready -U postgres -d postgres" ]
    interval: 10s
    timeout: 5s
    retries: 5

x-networks:
  &default-networks
    - outbox-network

services:

# Account applications
  accounts_db:
    image: postgres
    ports:
      - "5431:5432"
    environment: *default-environment
    healthcheck: *default-healthcheck
    networks: *default-networks
  accounts_publisher:
    build:
      context: .
      dockerfile: accounts/Dockerfile
    command: "python manage.py publisher"
    volumes:
      - ./accounts:/app
    env_file:
      - accounts/.env
    depends_on:
      accounts_db:
        condition: service_healthy
    networks: *default-networks
  accounts:
    build:
      context: .
      dockerfile: accounts/Dockerfile
    command: ['./commands.sh']
    volumes:
      - ./accounts:/app
    env_file:
      - accounts/.env
    ports:
      - "8000:8000"
    depends_on:
      accounts_db:
        condition: service_healthy
    networks: *default-networks

# Recommendations applications
  recommendations_db:
    image: postgres
    ports:
      - "5432:5432"
    environment: *default-environment
    healthcheck: *default-healthcheck
    networks: *default-networks
  recommendations_consumer:
    build:
      context: .
      dockerfile: recommendations/Dockerfile
    command: "python manage.py pubsub '/topic/VirtualTopic.user-created' src.apps.core.pubsub.create_recommendation"
    volumes:
      - ./recommendations:/app
    env_file:
      - recommendations/.env
    networks: *default-networks
  recommendations:
    build:
      context: .
      dockerfile: recommendations/Dockerfile
    command: ['./commands.sh']
    volumes:
      - ./recommendations:/app
    env_file:
      - recommendations/.env
    ports:
      - "8001:8000"
    depends_on:
      recommendations_db:
        condition: service_healthy
    networks: *default-networks


# RabbitMQ applications
  rabbitmq:
    build:
      context: ./rabbitmq
    restart: always
    ports:
      - "15672:15672"
      - "61613:61613"
    networks: *default-networks

# Networks
networks:
  outbox-network:
    driver: bridge